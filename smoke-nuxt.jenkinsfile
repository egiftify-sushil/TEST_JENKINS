
def gitbranchname = ''
def buildStatus = true
def attachment = false
def sqlFilePath = ''



pipeline {
    agent any
    environment {
        GIT_URL = "${env.GITURL}"
      
    }

    tools {
        jdk 'jdk14'
        jdk 'jdk17'
        nodejs 'nodejs14'
    }

    parameters {
        booleanParam(name: 'JERSEY_RELEASE', defaultValue: true)
        booleanParam(name: 'PHP_RELEASE', defaultValue: true)
        // booleanParam(name: 'ANGULAR_RELEASE', defaultValue: true)
        booleanParam(name: 'OPS_RELEASE', defaultValue: true)
        booleanParam(name: 'NUXT_RELEASE', defaultValue: true)
        string(name: 'GIT_BRANCH_NAME', defaultValue: '', description: 'Provide GIT Branch Name')
       
        string(name: 'DB_FILE_PATH', defaultValue: '', description: 'Provide db file path if any')
    }

    stages {
        /**
         STAGE 1: Deleting Pipeline Workspace
         */
        stage('Preparing For UAT Upload') {
            steps {
                script {
                   
                    gitbranchname = params.GIT_BRANCH_NAME
                   
                    sqlFilePath = params.DB_FILE_PATH

                    // Clean workspace
                    cleanWs()

                    // Set build description with both branch names
                   
                }
            }
        }

        /**
         STAGE 2: Doing GIT Repos Checkout Parallely
         */
    
             
        stage('Common Repos Checkout') {
            parallel {
                stage('platform') {
                    when { expression { params.NUXT_RELEASE } }

                    steps {
                        script {
                          echo("${GIT_URL}/nuxt_framework.git");
                        }
                    }
                }

               
                 
       
            }
        }
            
        

     
    }

    post {
        success {
            script {
                buildStatus = 'SUCCESS'
            }
        }
        unstable {
            script {
                buildStatus = 'UNSTABLE'
            }
        }
        failure {
            script {
                buildStatus = false
            }
        }
    }
}
