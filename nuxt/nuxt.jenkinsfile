def gitbranch = ''
def gitbranch1 = '1.0.0'
def buildStatus = true
def attachment = false
def sqlFilePath = ''

def nuxtlibrariesRepos = [
    'eslint_plugin',
    'eslint',
    'fe_communicator',
    'nuxt_framework',
    'fe_ts_utils',
]

def nuxtRepos = [
    'js_object_library',    
    'nuxt_object_library',
    'nuxt_common_modules',
  
]

pipeline {
    agent {
        node {
             label ''
             customWorkspace '/var/devops/NUXT_PROJECT/'
          }
    }

    tools {
        nodejs 'nodejs18'
    }

    parameters {
        string(name: 'GIT_BRANCH_NAME', defaultValue: '', description: 'Provide GIT Branch Name')
        string(name: 'DB_FILE_PATH', defaultValue: '', description: 'Provide db file path if any')
    }

    stages {
            stage('Preparing For  Upload') {
                steps {
                    script {
                        gitbranch = params.GIT_BRANCH_NAME
                        sqlFilePath = params.DB_FILE_PATH

                        // Clean workspace
                        cleanWs()
                    }
                }
            }

            stage('Checkout Repositories') {
                steps {
                    script {
                        withCredentials([string(credentialsId: 'GitUrl', variable: 'GitUrl')]) {
                            parallel (
                                "Nuxt Libraries": {
                                    nuxtlibrariesRepos.each { repo ->
                                        dir(repo) {
                                            checkout([
                                                $class: 'GitSCM',
                                                branches: [[name: "${gitbranch1}"]],
                                                userRemoteConfigs: [[url: "${GitUrl}/${repo}.git"]]]
                                            )
                                        }
                                    }
                                },
                                "Nuxt Repos": {
                                    nuxtRepos.each { repo ->
                                        dir(repo) {
                                            checkout([
                                                $class: 'GitSCM',
                                                branches: [[name: "${gitbranch}"]],
                                                userRemoteConfigs: [[url: "${GitUrl}/${repo}.git"]]]
                                            )
                                        }
                                    }
                                },
                                "Nuxt Staff Repo": {
                                
                                        dir('nuxt_staff') {
                                            checkout([
                                                $class: 'GitSCM',
                                                branches: [[name: "main"]],
                                                userRemoteConfigs: [[url: "${GitUrl}/nuxt_staff.git"]]]
                                            )
                                        }
                                    
                                }
                            )
                        }
                    }
                }
            }
               
           
// stage 2
           
           

        
                stage('Eslint') {
                    steps {
                        script {
                            // Navigate to the eslint_plugin directory
                            dir('eslint') {
                                // Modify package.json
                            sh '''
                                sed -i 's|"@egiftify/eslint-plugin-customlint": "portal:<repository_path>"|"@egiftify/eslint-plugin-customlint": "portal:/var/devops/NUXT_PROJECT/eslint_plugin"|' package.json
                            
                                '''
                             

                            }
                        }  
                    }
                 }
                stage('Fe communicator') {
                    steps {
                        script {
                            dir('fe_communicator') {
                                sh '''
                                sed -i '
                                s|"@egiftify/eslint-plugin-customlint": "portal:<repository_path>"|"@egiftify/eslint-plugin-customlint": "portal:/var/devops/NUXT_PROJECT/eslint_plugin"|; 
                                s|"@egiftify/eslint": "portal:<repository_path>"|"@egiftify/eslint": "portal:/var/devops/NUXT_PROJECT/eslint"|
                                ' package.json
                            
                                '''
                                
                            }
                        }  
                    }
                }

                stage('Nuxt Framework') {
                    steps {
                        script {
                            dir('nuxt_framework') {
                             sh '''
                                  sed -i 's|"@egiftify/eslint": "portal:<repository_path>"|"@egiftify/eslint": "portal:/var/devops/NUXT_PROJECT/eslint"|' package.json
                            
                                '''
                            
                            }
                        }  
                    }
                }
                stage('Fe Ts Utils') {
                    steps {
                        script {
                            dir('fe_ts_utils') {
                                sh '''
                                sed -i '
                                s|"@egiftify/eslint-plugin-customlint": "portal:<repository_path>"|"@egiftify/eslint-plugin-customlint": "portal:/var/devops/NUXT_PROJECT/eslint_plugin"|; 
                                s|"@egiftify/eslint": "portal:<repository_path>"|"@egiftify/eslint": "portal:/var/devops/NUXT_PROJECT/eslint"|
                                ' package.json
                            
                                '''
                               
                            }
                        }  
                    }
                }
            stage('Js Object Libraries') {
                steps {
                    script {
                        dir('js_object_library') {
                            sh '''
                            sed -i '
                            s|"@egiftify/eslint-plugin-customlint": "portal:<repository_path>"|"@egiftify/eslint-plugin-customlint": "portal:/var/devops/NUXT_PROJECT/eslint_plugin"|; 
                            s|"@egiftify/eslint": "portal:<repository_path>"|"@egiftify/eslint": "portal:/var/devops/NUXT_PROJECT/eslint"|; 
                            s|"@egiftify/fe_ts_utils": "portal:<repository_path>"|"@egiftify/fe_ts_utils": "portal:/var/devops/NUXT_PROJECT/fe_ts_utils"|
                            ' package.json
                            '''
                           
                        }
                    }  
                }
            }
            // nuxt_object_library
            stage('Nuxt Object Libraries') {
                        steps {
                            script {
                                dir('nuxt_object_library') {
                                    sh '''
                                    sed -i '
                                    
                                    s|"@egiftify/eslint": "portal:<repository_path>"|"@egiftify/eslint": "portal:/var/devops/NUXT_PROJECT/eslint"|; 
                                    s|"@egiftify/js_object_library": "portal:<repository_path>"|"@egiftify/js_object_library": "portal:/var/devops/NUXT_PROJECT/js_object_library"|
                                    ' package.json
                                    '''
                                  
                                }
                            }  
                        }
                    }
            //    nuxt_common_modules

            stage('nuxt_common_modules') {
                steps {
                    script {
                        dir('nuxt_common_modules') {
                            sh '''
                            sed -i '
                            s|"@egiftify/fe_communicator": "portal:<repository_path>"|"@egiftify/fe_communicator": "portal:/var/devops/NUXT_PROJECT/fe_communicator"|; 
                            s|"@egiftify/fe_resources": "portal:<repository_path>"|"@egiftify/fe_resources": "portal:/var/devops/NUXT_PROJECT/fe_resources"|; 
                            s|"@egiftify/nuxt_framework": "portal:<repository_path>"|"@egiftify/nuxt_framework": "portal:/var/devops/NUXT_PROJECT/nuxt_framework"|; 
                            s|"@egiftify/nuxt_object_library": "portal:<repository_path>"|"@egiftify/nuxt_object_library": "portal:/var/devops/NUXT_PROJECT/nuxt_object_library"|
                            ' package.json
                            '''
                            
                        }
                    }  
                }
            }
            // nuxt staff
             stage('Nuxt Staff') {
                        steps {
                            script {
                                dir('nuxt_staff') {
                                    sh '''
                                    sed -i '
                                    
                                    s|"@egiftify/eslint": "portal:<repository_path>"|"@egiftify/eslint": "portal:/var/devops/NUXT_PROJECT/eslint"|; 
                                    s|"@egiftify/nuxt_common_modules": "portal:<repository_path>"|"@egiftify/nuxt_common_modules": "portal:/var/devops/NUXT_PROJECT/nuxt_common_modules"|
                                    ' package.json
                                    '''
                                 
                                }
                            }  
                        }
                    }
         
// stage('Install Node.js and Yarn') {
//     steps {
//         script {
//             sh '''
//             source ~/.nvm/nvm.sh
//             nvm use 18.17.1
//             node -v
//             npm -v
//             yarn -v
//             '''
//         }
//     }
// }


        //                stage('Installing and Configuring Yarn') {
        //     steps {
        //         script {
        //             withEnv([
        //                 "PATH+NODE=${tool name: 'nodejs18'}/bin",
        //                 "PATH+YARN=/home/ec2-user/.nvm/versions/node/v18.17.1/bin"
        //             ]) {
        //                 sh '''
        //                 # Set Yarn to use version Berry (v2+) and upgrade to 3.6.0
        //                 yarn set version berry
        //                 yarn set version 3.6.0

        //                 # Confirm Yarn version
        //                 yarn --version
        //                 '''
        //             }
        //         }
        //     }
        // }

        stage('Eslint Plugin Build') {
            steps {
                script {
                    withEnv([
                        "PATH+NODE=${tool name: 'nodejs18'}/bin",
                        "PATH+YARN=/home/ec2-user/.nvm/versions/node/v18.16.0/bin"
                    ]) {
                        dir('eslint_plugin') {
                            sh 'yarn set version berry'
                            sh 'yarn set version 3.6.0'
                            sh 'yarn install'
                        }
                    }
                }
            }
        }

        stage('Eslint Build') {
            steps {
                script {
                    withEnv([
                        "PATH+NODE=${tool name: 'nodejs18'}/bin",
                        "PATH+YARN=/home/ec2-user/.nvm/versions/node/v18.16.0/bin"
                    ]) {
                        dir('eslint') {
                           
                            sh 'yarn set version berry'
                            sh 'yarn set version 3.6.0'
                            sh 'yarn install'
                        }
                    }
                }
            }
        }

        stage('Fe Communicator Build') {
            steps {
                script {
                    withEnv([
                        "PATH+NODE=${tool name: 'nodejs18'}/bin",
                        "PATH+YARN=/home/ec2-user/.nvm/versions/node/v18.16.0/bin"
                    ]) {
                        dir('fe_communicator') {
                             sh 'yarn cache clean'
                            sh 'yarn install'
                        }
                    }
                }
            }
        }

         


    }

    post {
        success {
            script {
                buildStatus = 'SUCCESS'
            }
        }
        unstable {
            script {
                buildStatus = 'UNSTABLE'
            }
        }
        failure {
            script {
                buildStatus = false
            }
        }
    }
}
